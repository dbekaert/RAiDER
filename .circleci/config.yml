version: 2.1

jobs:
  build:
    parameters:
      python-version:
        type: string
    docker:
      - image: cimg/base:current
        user: root
    steps:
      - checkout

      - run:
          name: Install MiniForge
          shell: /bin/bash -l
          command: |
            apt update --yes && apt-get upgrade --yes
            apt install -y --no-install-recommends wget ca-certificates git

            cd ${HOME}
            wget -O  Miniforge3.sh "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh"
            bash Miniforge3.sh -b -p "${HOME}/conda"
            source "${HOME}/conda/etc/profile.d/conda.sh"
            source "${HOME}/conda/etc/profile.d/mamba.sh"

      - run:
          name: Create RAiDER environment
          no_output_timeout: 30m
          shell: /bin/bash -xl
          command: |
            source "${HOME}/conda/etc/profile.d/conda.sh"
            source "${HOME}/conda/etc/profile.d/mamba.sh"
          
            PYTHON_VERSION="<< parameters.python-version >>"
            sed -i "/python>=/c\ - python=${PYTHON_VERSION}" environment.yml
            mamba env create -f environment.yml

      - run:
          name: Install raider and check environment
          shell: /bin/bash -xl
          command: |
            source "${HOME}/conda/etc/profile.d/conda.sh"
            source "${HOME}/conda/etc/profile.d/mamba.sh"
            mamba activate RAiDER

            python -m pip install --no-deps .

            python -c "import RAiDER; from RAiDER.delay import tropo_delay"
            python -c "import RAiDER; from RAiDER.interpolator import interp_along_axis"

            python --version
            python -c "import numpy; print(numpy.__version__)"
            python -c "import pyproj; print(pyproj.__version__)"

      - run:
          name: Setup data stores
          shell: /bin/bash -xl
          command: |
            source "${HOME}/conda/etc/profile.d/conda.sh"
            source "${HOME}/conda/etc/profile.d/mamba.sh"
            mamba activate RAiDER

            python -c 'from RAiDER.models.credentials import setup_from_env; setup_from_env()'

      - run:
          name: Run unit tests
          shell: /bin/bash -xl
          command: |
            source "${HOME}/conda/etc/profile.d/conda.sh"
            source "${HOME}/conda/etc/profile.d/mamba.sh"
            mamba activate RAiDER

            COV_OPTIONS=`python -c "import importlib;print(*(' --cov='+p for p in importlib.util.find_spec('RAiDER').submodule_search_locations))"`
            pytest -m "not long" test/ ${COV_OPTIONS} --cov-report=

      - run:
          name: Report coverage
          shell: /bin/bash -xl
          command: |
            PYTHON_VERSION="<< parameters.python-version >>"
            if [ "${PYTHON_VERSION}" == "3.12" ]; then
              source "${HOME}/conda/etc/profile.d/conda.sh"
              source "${HOME}/conda/etc/profile.d/mamba.sh"
              mamba activate RAiDER

              python -m pip install coveralls
              pwd
              ls -l tools/RAiDER/
              python .circleci/fix_coverage_paths.py .coverage ${PWD}/tools/RAiDER/
              coverage report -mi --show-missing --data-file=.coverage
              ls -l .coverage # Add this line
              cat .coverage # Add this line (to see its contents)
              coveralls --verbose
            fi

workflows:
  all-tests:
    jobs:
      - build:
          matrix:
            parameters:
              python-version: ["3.9", "3.10", "3.11", "3.12"]
